plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


android {
    namespace "com.example.moatmat_uploader"
    compileSdkVersion 34
    ndkVersion "27.0.12077973"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }


    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }    

    defaultConfig {
        applicationId "com.moatmat.uploader"
        minSdk = 21
        targetSdk = 34
        versionCode = 9
        versionName = flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
       }
   }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def newName
            def buildType = variant.buildType.name
            def version = variant.versionName
            def appName = "teacher"

            if (buildType == 'debug') {
                newName = "app-${variant.name}-debug.apk"
            } else {
                newName = "${appName}_${version}_${variant.name}.apk"
            }

            outputFileName = newName
        }
    }
}

dependencies {
    //
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'
    // Import the BoM for the Firebase platform
    implementation(platform("com.google.firebase:firebase-bom:33.8.0"))
}
flutter {
    source '../..'
}
